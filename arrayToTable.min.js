export default function arrayToTable(e, t, l, a) {
  const n = document.createElement("table"),
    o = [...new Set(t.map((e) => Object.keys(e)).flat())];
  (n.innerHTML = `\n\n<thead class="table-head">\n    <tr class="table-row">\n        ${o
    .map((e) => `<th class="table-header">${e}</th>`)
    .join("")}\n    </tr>\n</thead>\n<tbody class="table-body">\n\n${t
    .map(
      (e) =>
        `<tr class="table-row">\n            ${o
          .map(
            (t) =>
              `<td class="table-cell">\n                        ${
                null !== e[t]
                  ? "object" == typeof e[t]
                    ? JSON.stringify(e[t])
                    : e[t]
                  : ""
              }\n                        </td>`
          )
          .join("")}<tr>`
    )
    .join("")}\n</tbody>\n`),
    !0 === l &&
      ((n.style.cssText = `margin: none; padding: none; border-collapse: collapse; font-size: ${
        a || 9
      }px;`),
      n
        .querySelectorAll(".table-header")
        .forEach(
          (e) =>
            (e.style.cssText =
              "padding: 0.5em 1em 0.5em 1em; border: 1px solid #bbb; font-weight: bold; background-color: #dddccc;")
        ),
      n
        .querySelectorAll(".table-cell")
        .forEach(
          (e) =>
            (e.style.cssText =
              "padding: 0.5em 1em 0.5em 1em; border: 1px solid #bbb;")
        )),
    e.append(n);
}
